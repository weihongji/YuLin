<?xml version="1.0" encoding="utf-8" ?>
<configuration>
	<configSections>
		<section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
	</configSections>
	<log4net xmlns="urn:log4net">
		<root>
			<!--control log level: ALL|DEBUG|INFO|WARN|ERROR|FATAL|OFF-->
			<!--如果没有定义LEVEL的值，则缺省为DEBUG-->
			<level value="ALL"/>
			<appender-ref ref="RollingFileAppender"/>
			<!--<appender-ref ref="ADONetAppender"/>-->
		</root>

		<!--文件日志定义-->
		<appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender,log4net">
			<file value="Logs\"/>
			<appendToFile value="true"/>
			<rollingStyle value="Date"/>
			<maxSizeRollBackups value="10"/>
			<datePattern value="yyyy-MM-dd&quot;.log&quot;"/>
			<staticLogFileName value="false"/>
			<layout type="log4net.Layout.PatternLayout">
				<footer value="&#13;&#10;--------------------- Footer -------------------------" />
				<header value="&#13;&#10;--------------------- Header -------------------------" />
				<!--<conversionPattern value="[%d{yyyy-MM-dd HH:mm:ss.fff}] 日志级别:%-5p 线程:%t 类名：%c 行号：%L %n错误消息：%m"/>-->
				<conversionPattern value="%n%-5p %d{HH:mm:ss} (%c): %m"/>
			</layout>
			<!--==================layout节点的配置说明======================
			2015-10-16 23:15:59 DEBUG (Importer): Existing import id = 1
				%m(message):输出的日志消息，如ILog.Debug(…)输出的一条消息
				%n(new line):换 行
				%d(datetime):输出当前语句运行的时刻
				%r(run time):输出程序从运行到执行到当前语句时消耗的毫秒数
				%t(thread id):当前语句所在的线程ID
				%p(priority): 日志的当前优先级别，即DEBUG、INFO、WARN…等
				%c(class):当前日志对象的名称，例如：
				模式字符串为：%-10c -%m%n
				代码为：
				ILog log=LogManager.GetLogger(“Exam.Log”);
				log.Debug(“Hello”);
				则输出为下面的形式：
				Exam.Log       - Hello
				%L：输出语句所在的行 号
				%F：输出语句所在的文件名
				%-数字：表示该项的最小长度，如果不够，则用空格填充
				例如，转换模式为%r [%t]%-5p %c - %m%n 的 PatternLayout 将生成类似于以下内容的输出：
				176 [main] INFO org.foo.Bar - Located nearest gas station.
			=========================================================-->
		</appender>
	</log4net>
</configuration>
